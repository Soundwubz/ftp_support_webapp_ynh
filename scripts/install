#!/bin/bash

ynh_version=$(sudo yunohost -v | grep "moulinette:" | cut -d' ' -f2 | cut -d'.' -f1,2)
# Retrieve arguments
if [ $ynh_version = "2.4" ]
then
	domain=$YNH_APP_ARG_DOMAIN
	admin=$YNH_APP_ARG_ADMIN
	language=$YNH_APP_ARG_LANGUAGE

	app=$YNH_APP_INSTANCE_NAME

	# Source app helpers
	source /usr/share/yunohost/helpers
else
	domain=$1
	admin=$2
	language=$3
	app=ftp_webapp
fi

# Checks variables are not empty
test -z "$domain" && (echo "domain not set" && touch /force_stop)
test -z "$admin" && (echo "admin not set" && touch /force_stop)
test -z "$language" && (echo "language not set" && touch /force_stop)


# Delete files and db if exit with an error
EXIT_PROPERLY () {
	trap '' ERR
	echo -e "\e[91m \e[1m"	# Shell in light red bold
	echo -e "!!\n  $app install's script has encountered an error. Installation was cancelled.\n!!"

	if [ $ynh_version = "2.2" ]; then
		/bin/bash ./remove	# Appel le script remove. En 2.2, ce comportement n'est pas automatique.
	fi
	exit 1
}
TRAP_ON () {	# Activate signal capture
	trap EXIT_PROPERLY ERR	# Capturing exit signals on error
}
TRAP_OFF () {	# Ignoring signal capture until TRAP_ON
# Pour une raison que j'ignore, la fonction TRAP_ON fonctionne très bien.
# Mais pas la fonction TRAP_OFF...
# Utiliser directement `trap '' ERR` dans le code pour l'utiliser, à la place de la fonction.
	trap '' ERR	# Ignoring exit signals
}
TRAP_ON


path=/ftp_webapp_$admin
parent_dir=/var/www/webapp_$admin
final_path=$parent_dir/netftp

# Vérifie la validité de l'user admin
sudo yunohost user list --json | grep -q "\"username\": \"$admin\"" || (echo "Wrong admin" && touch /force_stop 2> /dev/null)

# Vérifie la disponibilité du path et du domaine.
sudo yunohost app checkurl $domain$path -a $app

# Créer le dossier parent des webapp pour l'utilisateur
if test ! -d $parent_dir
then	# Créer le dossier parent uniquement si il n'existe pas
    sudo mkdir $parent_dir
    # Set permissions
    sudo chmod 755 -R $parent_dir
    sudo chown -R root: $parent_dir
else
    echo "Création du dossier $parent_dir ignorée, le dossier existe déjà."
fi

# Vérifie si pure-ftpd est déjà installé
if test ! -f /usr/sbin/pure-ftpd-ldap
then # Installe Pure-ftpd uniquement si il ne l'est pas déjà
	# Cherche un port libre.
	port=21021
	while ! sudo yunohost app checkport $port ; do
		port=$((port+1))
	done

	# Ouvre le port dans le firewall
	sudo yunohost firewall allow TCP $port > /dev/null 2>&1

    # Install debian dependencies
    sudo apt-get update
    sudo apt-get install pure-ftpd-ldap -y -qq

    # Change user ID in configurations
    sed -i "s@__FTPUSER__@$admin@g" ../conf/ldap.conf
    sed -i "s@__FTPDIR__@$parent_dir@g" ../conf/ldap.conf

    # Adapt PureFTPd configuration
    sudo cp ../conf/ldap.conf /etc/pure-ftpd/db/
    sudo sh -c 'echo "yes" > /etc/pure-ftpd/conf/NoAnonymous'
    sudo sh -c 'echo "yes" > /etc/pure-ftpd/conf/ChrootEveryone'
    sudo sh -c 'echo "no" > /etc/pure-ftpd/conf/UnixAuthentication'
    sudo sh -c 'echo "50000 50100" > /etc/pure-ftpd/conf/PassivePortRange'
    sudo sh -c "echo "$port" > /etc/pure-ftpd/conf/Bind"

    # Ajoute le service au monitoring de Yunohost.
    sudo yunohost service add pure-ftpd-ldap --log "/var/log/pure-ftpd/transfer.log"

    # Restart PureFTPd
    sudo service pure-ftpd-ldap restart
else
    echo "Installation de pure-ftpd ignorée, pure-ftpd est déjà installé."
fi

# Enregistre les infos dans la config YunoHost
sudo yunohost app setting $app domain -v $domain
sudo yunohost app setting $app path -v $path
sudo yunohost app setting $app admin -v $admin
sudo yunohost app setting $app port -v $port


# Crée le repertoire de destination et stocke son emplacement.
sudo mkdir "$final_path"
sudo yunohost app setting $app final_path -v $final_path

# Décompresse la source
tar -x -f ../sources/net2ftp.tar.gz
# Copie les fichiers sources
sudo cp -a net2ftp/. "$final_path"
# Copie les fichiers additionnels ou modifiés.
sudo cp -a ../sources/ajouts/. "$final_path"
# Et copie le fichier de config nginx
sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/netftp_$admin.conf


# Détermine le nom du fichier de langue
case "$language" in
   "Arabic") language_file="ar"
   ;;
   "Arabic UTF-8") language_file="ar-utf"
   ;;
   "Simplified Chinese") language_file="zh"
   ;;
   "Traditional Chinese") language_file="tc"
   ;;
   "Czech") language_file="cs"
   ;;
   "Danish UTF-8") language_file="da"
   ;;
   "Dutch") language_file="nl"
   ;;
   "English") language_file="en"
   ;;
   "English UTF-8") language_file="en-utf"
   ;;
   "French") language_file="fr"
   ;;
   "German") language_file="de"
   ;;
   "Finnish") language_file="fi"
   ;;
   "Hebrew") language_file="he"
   ;;
   "Hungarian") language_file="hu"
   ;;
   "Hungarian UTF-8") language_file="hu-utf"
   ;;
   "Italian") language_file="it"
   ;;
   "Japanese") language_file="ja"
   ;;
   "Polish") language_file="pl"
   ;;
   "Portugese") language_file="pt"
   ;;
   "Russian") language_file="ru"
   ;;
   "Spanish") language_file="es"
   ;;
   "Swedish") language_file="sv"
   ;;
   "Turkish") language_file="tr"
   ;;
   "Ukrainian") language_file="ua"
   ;;
   "Vietnamese") language_file="vi"
   ;;
esac
sudo yunohost app setting $app language_file -v $language_file

# Configurer net2ftp
sed -i "s@__DOMAIN__@$domain@" ../conf/settings_authorizations.inc.php
sed -i "s@__PORT__@$port@" ../conf/settings_authorizations.inc.php
sed -i "s@__LANG__@$language_file@" ../conf/settings.inc.php
sed -i "s@__PORT__@$port@" ../conf/registerglobals.inc.php

# Copier les fichiers de config
sudo cp ../conf/settings_authorizations.inc.php $final_path
sudo cp ../conf/settings.inc.php $final_path
sudo cp ../conf/registerglobals.inc.php $final_path/includes

# Configure les droits d'accès au fichiers
# -rw-r--r-- sur les fichiers
sudo find $final_path -type f -print0 | xargs -0 sudo chmod 644
# drwxr-xr-x sur les dossiers
# sudo find $final_path -type d | xargs sudo chmod 755
sudo find $final_path -type d -print0 | xargs -0 sudo chmod 755
# Les fichiers appartiennent à root
sudo chown -R root: $final_path

# www-data doit avoir les droits d'écriture sur le dossier temp.
sudo chown -R www-data: $final_path/temp

# Modifie les variables dans le fichier de configuration nginx
sudo sed -i "s@__PATHTOCHANGE__@$path@g" /etc/nginx/conf.d/$domain.d/netftp_$admin.conf
sudo sed -i "s@__FINALPATH__@$final_path@g" /etc/nginx/conf.d/$domain.d/netftp_$admin.conf
sudo sed -i "s@__NAMETOCHANGE__@$app@g" /etc/nginx/conf.d/$domain.d/netftp_$admin.conf


# Créer le fichier de configuration du pool php-fpm et le configure.
sed -i "s@__NAMETOCHANGE__@$app@g" ../conf/php-fpm.conf
sed -i "s@__FINALPATH__@$final_path@g" ../conf/php-fpm.conf
finalphpconf=/etc/php5/fpm/pool.d/$app.conf
sudo cp ../conf/php-fpm.conf $finalphpconf
sudo chown root: $finalphpconf
finalphpini=/etc/php5/fpm/conf.d/20-$app.ini
sudo cp ../conf/php-fpm.ini $finalphpini
sudo chown root: $finalphpini

# Configuration de logrotate
sudo cp ../conf/logrotate /etc/logrotate.d/$app


# Recharge la configuration Nginx et php5-fpm
sudo service nginx reload
sudo service php5-fpm reload
# Régénère la configuration de SSOwat
sudo yunohost app ssowatconf
